<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.ounwan.community">

	<!-- <select id="AetaList" resultType="aeta"> select * from AETA 
		order by BOARD_NUMBER DESC </select> -->
	<select id="AetaList" parameterType="map" resultType="aeta">
		select *
		from AETA
		order by AETA_NUMBER DESC
		limit #{start},#{limit}
	</select>

	<select id="AetaSearchAll" parameterType="map" resultType="aeta">
		select * from AETA
		where
		title like
		CONCAT('%',#{inputValue},'%')
		or
		CLIENT_ID like
		CONCAT('%',#{inputValue},'%')
		order by AETA_NUMBER DESC
		limit
		#{start},#{limit}
	</select>

	<select id="AetaSearchTitle" parameterType="map"
		resultType="aeta">
		select * from AETA
		where
		TITLE like CONCAT('%',#{inputValue},'%')
		order by AETA_NUMBER DESC
		limit
		#{start},#{limit}
	</select>
	<select id="AetaSearchId" parameterType="map" resultType="aeta">
		select
		* from AETA
		where
		CLIENT_ID like CONCAT('%',#{inputValue},'%')
		order by AETA_NUMBER DESC
		limit
		#{start},#{limit}
	</select>

	<select id="getProfileImage" parameterType="String" resultType="string">
		SELECT PROFILE_URL FROM CLIENTS WHERE CLIENT_ID = #{profileId}
	</select>

	<select id="gramWholeBoard" parameterType="map" resultType="gram">
		SELECT BOARD.*, IFNULL(LIKES_TABLE.LIKES, 0) AS LIKES, CLIENTS.PROFILE_URL 
		FROM (SELECT * FROM OUNWAN_COMMUNITY WHERE VISIBILITY = 0 
		AND COMMUNITY_NUMBER NOT IN (SELECT COMMUNITY_NUMBER FROM COMMUNITY_REPORTS 
		WHERE COMMUNITY_NUMBER IS NOT NULL AND CLIENT_ID = #{clientId}) 
		ORDER BY CREATED_DATE DESC LIMIT 5 OFFSET #{rowNum}) AS BOARD 
		LEFT OUTER JOIN CLIENTS ON BOARD.CLIENT_ID = CLIENTS.CLIENT_ID 
		LEFT OUTER JOIN (SELECT COMMUNITY_NUMBER, COUNT(*) AS LIKES FROM OUNWAN_LIKES GROUP BY COMMUNITY_NUMBER) AS LIKES_TABLE 
		ON BOARD.COMMUNITY_NUMBER = LIKES_TABLE.COMMUNITY_NUMBER ORDER BY CREATED_DATE DESC
	</select>
	
	<select id="selectLikeBoards" parameterType="String" resultType="int">
		SELECT COMMUNITY_NUMBER FROM OUNWAN_LIKES WHERE CLIENT_ID = #{clientId}
	</select>
	
	<select id="selectOunwangramBoardDetail" parameterType="map" resultType="gram">
		SELECT OUNWAN_COMMUNITY.*, CLIENTS.PROFILE_URL, IFNULL(OUNWAN_LIKES.LIKES_CHECK, 0) AS LIKES_CHECK, IFNULL(LIKES_TABLE.LIKES, 0) AS LIKES 
		FROM (SELECT * FROM OUNWAN_COMMUNITY WHERE COMMUNITY_NUMBER = #{communityNumber}) AS OUNWAN_COMMUNITY 
		LEFT JOIN (SELECT COMMUNITY_NUMBER, COUNT(*) AS LIKES_CHECK FROM OUNWAN_LIKES 
		WHERE CLIENT_ID=#{clientId} GROUP BY COMMUNITY_NUMBER) AS OUNWAN_LIKES ON OUNWAN_COMMUNITY.COMMUNITY_NUMBER = OUNWAN_LIKES.COMMUNITY_NUMBER 
		LEFT JOIN CLIENTS ON OUNWAN_COMMUNITY.CLIENT_ID = CLIENTS.CLIENT_ID 
		LEFT JOIN (SELECT COMMUNITY_NUMBER, COUNT(*) AS LIKES FROM OUNWAN_LIKES GROUP BY COMMUNITY_NUMBER) AS LIKES_TABLE 
		ON OUNWAN_COMMUNITY.COMMUNITY_NUMBER = LIKES_TABLE.COMMUNITY_NUMBER
	</select>
	
	<select id="selectOneBoard" parameterType="int" resultType="gram">
		SELECT * FROM (SELECT OUNWAN_COMMUNITY.*, IFNULL(LIKES, 0) AS LIKES FROM OUNWAN_COMMUNITY 
		LEFT OUTER JOIN (SELECT COMMUNITY_NUMBER, COUNT(*) AS LIKES FROM OUNWAN_LIKES GROUP BY COMMUNITY_NUMBER) AS LIKES_TABLE 
		ON OUNWAN_COMMUNITY.COMMUNITY_NUMBER = LIKES_TABLE.COMMUNITY_NUMBER WHERE VISIBILITY = 0) AS BOARD WHERE COMMUNITY_NUMBER = #{communityNumber}
	</select>
	
	<select id="gramFollowBoard" parameterType="map" resultType="gram">
		SELECT BOARD.*, IFNULL(LIKES_TABLE.LIKES, 0) AS LIKES, CLIENTS.PROFILE_URL 
		FROM (SELECT OUNWAN_COMMUNITY.* FROM OUNWAN_COMMUNITY 
		INNER JOIN (SELECT CLIENT_ID FROM FOLLOWERS WHERE FOLLOWER_ID = #{clientId}) AS FOLLOW_TABLE 
		ON OUNWAN_COMMUNITY.CLIENT_ID = FOLLOW_TABLE.CLIENT_ID WHERE COMMUNITY_NUMBER NOT IN 
		(SELECT COMMUNITY_NUMBER FROM COMMUNITY_REPORTS WHERE COMMUNITY_NUMBER IS NOT NULL AND CLIENT_ID = #{clientId}) 
		ORDER BY CREATED_DATE LIMIT 5 OFFSET #{rowNum}) AS BOARD 
		LEFT OUTER JOIN CLIENTS ON BOARD.CLIENT_ID = CLIENTS.CLIENT_ID LEFT OUTER JOIN (SELECT COMMUNITY_NUMBER, COUNT(*) AS LIKES 
		FROM OUNWAN_LIKES GROUP BY COMMUNITY_NUMBER) AS LIKES_TABLE ON BOARD.COMMUNITY_NUMBER = LIKES_TABLE.COMMUNITY_NUMBER WHERE VISIBILITY = 0
	</select>
	
	<select id="selectHashTagsByNumber" parameterType="int" resultType="String">
		SELECT HASH_TAGS.NAME FROM OUNWAN_DETAILS 
		LEFT OUTER JOIN HASH_TAGS ON OUNWAN_DETAILS.HASH_TAG_NUMBER = HASH_TAGS.HASH_TAG_NUMBER WHERE COMMUNITY_NUMBER = #{communityNumber}
	</select>
	
	<select id="selectBoardByCommunityNum" parameterType="int" resultType="gram">
		SELECT * FROM OUNWAN_COMMUNITY WHERE COMMUNITY_NUMBER = #{communityNumber} AND VISIBILITY = 0
	</select>
	
	<select id="searchGramClientId" parameterType="String" resultType="map">
		(SELECT CLIENTS.CLIENT_ID, CLIENTS.PROFILE_URL, IFNULL(FOLLOW.COUNT, 0) AS FOLLOWER 
		FROM (SELECT CLIENT_ID, PROFILE_URL FROM CLIENTS WHERE CLIENT_ID = #{keyword}) AS CLIENTS 
		LEFT OUTER JOIN (SELECT CLIENT_ID, COUNT(*) AS COUNT FROM FOLLOWERS GROUP BY CLIENT_ID) 
		AS FOLLOW ON CLIENTS.CLIENT_ID = FOLLOW.CLIENT_ID)
		UNION DISTINCT
		(SELECT * FROM (SELECT CLIENTS.CLIENT_ID, CLIENTS.PROFILE_URL, IFNULL(FOLLOW.COUNT, 0) AS FOLLOWER 
		FROM (SELECT CLIENT_ID, PROFILE_URL FROM CLIENTS WHERE CLIENT_ID LIKE CONCAT('%', #{keyword}, '%')) AS CLIENTS 
		LEFT OUTER JOIN (SELECT CLIENT_ID, COUNT(*) AS COUNT FROM FOLLOWERS GROUP BY CLIENT_ID) 
		AS FOLLOW ON CLIENTS.CLIENT_ID = FOLLOW.CLIENT_ID) AS CLIENTS ORDER BY FOLLOWER DESC) LIMIT 10
	</select>
	
	<select id="searchHashTag" parameterType="String" resultType="map">
		SELECT HASH_TAGS.*, IFNULL(OUNWAN_DETAILS.CNT, 0) AS COUNT 
		FROM (SELECT * FROM HASH_TAGS WHERE NAME = #{keyword}) AS HASH_TAGS
		LEFT OUTER JOIN (SELECT HASH_TAG_NUMBER, COUNT(*) AS CNT FROM OUNWAN_DETAILS 
		INNER JOIN OUNWAN_COMMUNITY ON OUNWAN_DETAILS.COMMUNITY_NUMBER = OUNWAN_COMMUNITY.COMMUNITY_NUMBER 
		WHERE VISIBILITY = 0 GROUP BY HASH_TAG_NUMBER) AS OUNWAN_DETAILS
		ON HASH_TAGS.HASH_TAG_NUMBER = OUNWAN_DETAILS.HASH_TAG_NUMBER
	</select>
	
	<select id="getUserProfileInfo" parameterType="String" resultType="map">
		SELECT CLIENTS.CLIENT_ID, CLIENTS.PROFILE_URL, IFNULL(FOLLOW.FOLLOWING, 0) AS FOLLOWING, 
		IFNULL(FOLLOWER.FOLLOWERCOUNT, 0) AS FOLLOWER, IFNULL(POST_TABLE.POSTS, 0) AS POSTS 
		FROM (SELECT * FROM CLIENTS WHERE CLIENT_ID = #{profileId}) AS CLIENTS 
		LEFT JOIN (SELECT FOLLOWER_ID, COUNT(*) AS FOLLOWING FROM FOLLOWERS GROUP BY FOLLOWER_ID) AS FOLLOW 
		ON CLIENTS.CLIENT_ID = FOLLOW.FOLLOWER_ID LEFT JOIN (SELECT CLIENT_ID, COUNT(*) AS FOLLOWERCOUNT 
		FROM FOLLOWERS GROUP BY CLIENT_ID) AS FOLLOWER ON CLIENTS.CLIENT_ID = FOLLOWER.CLIENT_ID 
		LEFT JOIN (SELECT CLIENT_ID, COUNT(*) AS POSTS FROM OUNWAN_COMMUNITY WHERE VISIBILITY = 0 GROUP BY CLIENT_ID) AS POST_TABLE 
		ON CLIENTS.CLIENT_ID = POST_TABLE.CLIENT_ID
	</select>
	
	<select id="getProfileBoard" parameterType="map" resultType="map">
		SELECT COMMUNITY_NUMBER, IMAGE_URL FROM OUNWAN_COMMUNITY 
		WHERE CLIENT_ID = #{profileId} AND VISIBILITY = 0 AND COMMUNITY_NUMBER NOT IN 
		(SELECT COMMUNITY_NUMBER FROM COMMUNITY_REPORTS WHERE COMMUNITY_NUMBER IS NOT NULL AND CLIENT_ID = #{clientId}) ORDER BY CREATED_DATE DESC
	</select>
	
	<select id="checkFollow" parameterType="map" resultType="int">
		SELECT COUNT(*) AS FOLLOW_CHECK FROM FOLLOWERS WHERE CLIENT_ID = #{profileId} AND FOLLOWER_ID = #{clientId}
	</select>
	
	<select id="selectBoardsByTag" parameterType="map" resultType="gram">
		SELECT BOARD.*, IFNULL(LIKE_TABLE.LIKES, 0) AS LIKES 
		FROM (SELECT BOARD.*, CLIENTS.PROFILE_URL FROM (SELECT * FROM (SELECT * FROM (SELECT OUNWAN_COMMUNITY.* 
		FROM (SELECT OUNWAN_DETAILS.COMMUNITY_NUMBER FROM OUNWAN_DETAILS 
		INNER JOIN (SELECT * FROM HASH_TAGS WHERE NAME = #{name}) AS HASH_TAGS 
		ON OUNWAN_DETAILS.HASH_TAG_NUMBER = HASH_TAGS.HASH_TAG_NUMBER) AS TAGS 
		LEFT JOIN OUNWAN_COMMUNITY ON TAGS.COMMUNITY_NUMBER = OUNWAN_COMMUNITY.COMMUNITY_NUMBER) AS OUNWAN_COMMUNITY 
		WHERE VISIBILITY = 0 ORDER BY CREATED_DATE DESC) AS OUNWANGRAM LIMIT 5 OFFSET #{rowNum}) AS BOARD LEFT JOIN CLIENTS 
		ON BOARD.CLIENT_ID = CLIENTS.CLIENT_ID) AS BOARD LEFT JOIN (SELECT COMMUNITY_NUMBER, COUNT(*) AS LIKES 
		FROM OUNWAN_LIKES GROUP BY COMMUNITY_NUMBER) AS LIKE_TABLE ON BOARD.COMMUNITY_NUMBER = LIKE_TABLE.COMMUNITY_NUMBER ORDER BY CREATED_DATE DESC
	</select>
	
	<select id="selectMyInbody" parameterType="String" resultType="inbody">
		SELECT * FROM INBODY WHERE CLIENT_ID = #{clientId} ORDER BY UPDATED_DATE DESC LIMIT 7
	</select>
	
	<select id="selectFollowerList" parameterType="map" resultType="map">
		SELECT FOLLOWER_ID, PROFILE_URL, IFNULL(CNT, 2) AS FOLLOW_CHECK 
		FROM (SELECT * FROM FOLLOWERS WHERE CLIENT_ID = #{profileId}) AS FOLLOWERS 
		LEFT JOIN CLIENTS ON FOLLOWERS.FOLLOWER_ID = CLIENTS.CLIENT_ID 
		LEFT JOIN (SELECT CLIENT_ID, COUNT(*) AS CNT FROM FOLLOWERS WHERE FOLLOWER_ID = #{clientId} GROUP BY CLIENT_ID) AS FOLLOW_CHECK 
		ON FOLLOWERS.FOLLOWER_ID = FOLLOW_CHECK.CLIENT_ID WHERE FOLLOWER_ID = #{clientId}
		UNION
		SELECT FOLLOWER_ID, PROFILE_URL, IFNULL(CNT, 0) AS FOLLOW_CHECK 
		FROM (SELECT * FROM FOLLOWERS WHERE CLIENT_ID = #{profileId}) AS FOLLOWERS 
		LEFT JOIN CLIENTS ON FOLLOWERS.FOLLOWER_ID = CLIENTS.CLIENT_ID 
		LEFT JOIN (SELECT CLIENT_ID, COUNT(*) AS CNT FROM FOLLOWERS WHERE FOLLOWER_ID = #{clientId} GROUP BY CLIENT_ID) AS FOLLOW_CHECK 
		ON FOLLOWERS.FOLLOWER_ID = FOLLOW_CHECK.CLIENT_ID WHERE FOLLOWER_ID != #{clientId} ORDER BY FOLLOW_CHECK DESC
	</select>
	
	<select id="selectFollowingList" parameterType="map" resultType="map">
		SELECT * FROM (SELECT CLIENTS.CLIENT_ID AS FOLLOWER_ID, PROFILE_URL, IFNULL(FOLLOW_CHECK, 2) AS FOLLOW_CHECK FROM FOLLOWERS 
		LEFT JOIN CLIENTS ON FOLLOWERS.CLIENT_ID = CLIENTS.CLIENT_ID 
		LEFT JOIN (SELECT CLIENT_ID, COUNT(*) AS FOLLOW_CHECK FROM FOLLOWERS WHERE FOLLOWER_ID = #{clientId} GROUP BY CLIENT_ID) AS FOLLOW_TABLE 
		ON FOLLOWERS.CLIENT_ID = FOLLOW_TABLE.CLIENT_ID WHERE FOLLOWER_ID = #{profileId}) AS FOLLOW WHERE FOLLOWER_ID = #{clientId}
		UNION
		SELECT * FROM (SELECT CLIENTS.CLIENT_ID AS FOLLOWER_ID, PROFILE_URL, IFNULL(FOLLOW_CHECK, 0) AS FOLLOW_CHECK FROM FOLLOWERS 
		LEFT JOIN CLIENTS ON FOLLOWERS.CLIENT_ID = CLIENTS.CLIENT_ID 
		LEFT JOIN (SELECT CLIENT_ID, COUNT(*) AS FOLLOW_CHECK FROM FOLLOWERS WHERE FOLLOWER_ID = #{clientId} GROUP BY CLIENT_ID) AS FOLLOW_TABLE 
		ON FOLLOWERS.CLIENT_ID = FOLLOW_TABLE.CLIENT_ID WHERE FOLLOWER_ID = #{profileId}) AS FOLLOW WHERE FOLLOWER_ID != #{clientId}
	</select>
	
	<insert id="insertgGramLikeBoard" parameterType="gramLikes">
		INSERT INTO OUNWAN_LIKES VALUES (#{likesId}, #{communityNumber}, #{clientId})
	</insert>
	
	<insert id="insertGramBoard" parameterType="gram">
		<selectKey keyColumn="COMMUNITY_NUMBER" keyProperty="communityNumber" order="AFTER" resultType="int">
			SELECT COMMUNITY_NUMBER FROM OUNWAN_COMMUNITY WHERE CLIENT_ID = #{clientId} AND IMAGE_URL = #{imageUrl}
		</selectKey>
	
		INSERT INTO OUNWAN_COMMUNITY(CLIENT_ID, CONTENTS, CREATED_DATE, IMAGE_URL) VALUES (#{clientId}, #{contents}, NOW(), #{imageUrl})
	</insert>
	
	<insert id="insertHashTagName" parameterType="String">
		INSERT INTO HASH_TAGS(NAME) SELECT #{name} FROM DUAL WHERE NOT EXISTS(SELECT * FROM HASH_TAGS WHERE NAME = #{name})
	</insert>
	
	<insert id="addHashTag" parameterType="map">
		INSERT INTO OUNWAN_DETAILS(COMMUNITY_NUMBER, HASH_TAG_NUMBER) 
		VALUES(#{communityNumber}, (SELECT HASH_TAG_NUMBER FROM HASH_TAGS WHERE NAME = #{name}))
	</insert>
	
	<insert id="reportGramBoard" parameterType="map">
		INSERT INTO COMMUNITY_REPORTS(COMMUNITY_NUMBER, CLIENT_ID, REGISTERED_DATE, REASON) VALUES(#{communityNumber}, #{clientId}, NOW(), #{reason})
	</insert>
	
	<insert id="insertInbody" parameterType="inbody">
		INSERT INTO INBODY(CLIENT_ID, HEIGHT, WEIGHT, SKELETAL_MUSCLES_MASS, BODY_WATER, BMR, BMI, INBODY_SCORE, UPDATED_DATE) 
		VALUES(#{clientId}, #{height}, #{weight}, #{skeletalMusclesMass}, #{bodyWater}, #{bmr}, #{bmi}, #{inbodyScore}, #{updatedDate})
	</insert>
	
	<insert id="addFollowing" parameterType="map">
		INSERT INTO FOLLOWERS VALUES(#{relationId}, #{profileId}, #{clientId})
	</insert>
	
	<delete id="deleteGramLikeBoard" parameterType="String">
		DELETE FROM OUNWAN_LIKES WHERE LIKES_ID = #{likesId}
	</delete>
	
	<delete id="deleteHashTag" parameterType="map">
		DELETE FROM OUNWAN_DETAILS WHERE HASH_TAG_NUMBER = (SELECT HASH_TAG_NUMBER FROM HASH_TAGS WHERE NAME = #{name}) AND COMMUNITY_NUMBER = #{communityNumber}
	</delete>
	
	<delete id="deleteGramBoard" parameterType="int">
		DELETE FROM OUNWAN_COMMUNITY WHERE COMMUNITY_NUMBER = #{communityNumber}
	</delete>
	
	<delete id="cancelFollowing" parameterType="map">
		DELETE FROM FOLLOWERS WHERE CLIENT_ID = #{profileId} AND FOLLOWER_ID = #{clientId}
	</delete>
	
	<update id="updateGramBoard" parameterType="gram">
		UPDATE OUNWAN_COMMUNITY SET CONTENTS = #{contents}, UPDATED_DATE = NOW(), IMAGE_URL = #{imageUrl} WHERE COMMUNITY_NUMBER = #{communityNumber}
	</update>
	
	<update id="updateInbody" parameterType="inbody">
		UPDATE INBODY SET HEIGHT = #{height}, WEIGHT = #{weight}, SKELETAL_MUSCLES_MASS = #{skeletalMusclesMass}, 
		BODY_WATER = #{bodyWater}, BMR = #{bmr}, BMI = #{bmi}, INBODY_SCORE = #{inbodyScore} 
		WHERE INBODY_NUMBER = #{inbodyNumber} AND CLIENT_ID = #{clientId}
	</update>

	<select id="AetaCountAllPosts" resultType="int">
		select count(*) from
		AETA
	</select>

	<select id="AetaCountSearchAll" parameterType="String"
		resultType="int">
		select count(*) from
		AETA
		where
		title like
		CONCAT('%',#{inputValue},'%')
		or
		CLIENT_ID like
		CONCAT('%',#{inputValue},'%')
	</select>
	<select id="AetaCountSearchTitle" parameterType="String"
		resultType="int">
		select count(*) from
		AETA
		where
		title like
		CONCAT('%',#{inputValue},'%')
		or
		CLIENT_ID like
		CONCAT('%',#{inputValue},'%')
	</select>
	<select id="AetaCountSearchId" parameterType="String"
		resultType="int">
		select count(*) from
		AETA
		where
		title like
		CONCAT('%',#{inputValue},'%')
		or
		CLIENT_ID like
		CONCAT('%',#{inputValue},'%')
	</select>

	<insert id="AetaInsertPost" parameterType="aeta">
		INSERT INTO AETA (
		CLIENT_ID,TITLE,CONTENTS,CREATED_DATE)
		value(#{clientId},#{title},#{contents},now())
	</insert>
	
	<insert id="AetaInsertImageUrls" parameterType="map">
		INSERT INTO AETA_IMAGES 
		(AETA_NUMBER,URL)
		values(
		(
		select MAX(AETA_NUMBER) from AETA),
		#{url}
		);
	</insert>



	<select id="AetaPostToBeUpdated" parameterType="int"
		resultType="map">
		select cb.AETA_NUMBER ,
		cb.TITLE ,
		cb.CONTENTS ,
		cbi.AETA_IMAGE_NUMBER ,
		cbi.URL
		FROM AETA cb
		left outer join AETA_IMAGES cbi
		on cb.AETA_NUMBER =cbi.AETA_NUMBER
		where cb.AETA_NUMBER =#{aetaNumber};
	</select>

	<delete id="AetaDeleteImageUrls">
		DELETE from AETA_IMAGES 
		WHERE AETA_NUMBER =#{aetaNumber};
	</delete>
	
	<update id="AetaUpdatePost" parameterType="aeta">
		UPDATE AETA
		SET
		TITLE= #{title},
		CONTENTS= #{contents},
		UPDATED_DATE=now()
		where
		AETA_NUMBER =#{aetaNumber};
	</update>
	
	<update id="AetUpdateImageUrls" parameterType="aetaImages">
		UPDATE AETA_IMAGES 
		SET 
		URL= #{url}	
		where AETA_NUMBER =#{aetaNumber};

	</update>

	<delete id="AetaDeletePost" parameterType="int">
		DELETE FROM
		AETA
		WHERE AETA_NUMBER =#{aetaNumber};

	</delete>


	<select id="AetaReadPost" parameterType="int" resultType="map">

		SELECT a.AETA_NUMBER, a.CLIENT_ID,
		a.TITLE, a.CONTENTS as AETA_CONTENTS,
		a.CREATED_DATE as AETA_CREATED_DATE,
		a.UPDATED_DATE as AETA_UPDATED_DATE,
		a.VIEWS,
		COUNT(al.LIKE_NUMBER) as AETA_LIKES,
		ai.*,
		ac.COMMENT_NUMBER,
		ac.CLIENT_ID as COMMENTS_WRITER,
		ac.AETA_NUMBER,
		ac.CREATED_DATE as COM_CREATED,
		ac.CONTENTS as AETA_COMMENT,
		COUNT(ac.CONTENTS) as COUNT_COMMENTS,
		SUM(COUNT(ac.COMMENT_NUMBER)) OVER (PARTITION BY a.AETA_NUMBER) AS AETA_TOTAL_COMMENTS,
		ac.UPDATED_DATE as COM_UPDATED,
		c_commenter.CLIENT_ID as COMMENTER_ID,
		c_writer.PROFILE_URL as WRITER_PHOTO,
		c_commenter.PROFILE_URL as COMMENTER_PHOTO
		from
		AETA a
		left outer join AETA_IMAGES ai
		on a.AETA_NUMBER =ai.AETA_NUMBER
		left outer join COMMENTS ac
		on
		ac.AETA_NUMBER =a.AETA_NUMBER
		LEFT OUTER JOIN CLIENTS c_writer
		on c_writer.CLIENT_ID =a.CLIENT_ID
		Left OUTER JOIN CLIENTS c_commenter
		on c_commenter.CLIENT_ID = ac.CLIENT_ID
		Left OUTER JOIN AETA_LIKES al
		on al.AETA_NUMBER =a.AETA_NUMBER
		where a.AETA_NUMBER =#{aetaNumber}
		GROUP BY a.AETA_NUMBER, a.CLIENT_ID, a.TITLE,
		a.CONTENTS,
		a.CREATED_DATE, a.UPDATED_DATE, a.VIEWS,
		ai.AETA_IMAGE_NUMBER,ai.AETA_NUMBER,ai.URL,
		ac.COMMENT_NUMBER, ac.CLIENT_ID, ac.AETA_NUMBER,
		ac.CREATED_DATE, ac.CONTENTS,
		ac.UPDATED_DATE
		ORDER BY ac.COMMENT_NUMBER;
	</select>

	<select id="AetaCountLikes" parameterType="int" resultType="int">
		select count(AETA_NUMBER) from AETA_LIKES
		where AETA_NUMBER=
		#{aetaNumber};
	</select>

	<select id="AetaLikesCheck" parameterType="aetaLikes"
		resultType="int">
		select count(AETA_NUMBER) from AETA_LIKES
		where
		AETA_NUMBER=#{aetaNumber}
		and CLIENT_ID=#{clientId};
	</select>

	<insert id="AetaLike" parameterType="aetaLikes">
		INSERT INTO AETA_LIKES
		(AETA_NUMBER,CLIENT_ID)
		values(#{aetaNumber} ,#{clientId})
	</insert>

	<delete id="AetaDislike" parameterType="aetaLikes">
		DELETE from AETA_LIKES
		where AETA_NUMBER=#{aetaNumber}
		and CLIENT_ID=#{clientId}
	</delete>

	<insert id="AetaInsertComment" parameterType="aetaComments">
		INSERT INTO
		COMMENTS(CLIENT_ID, AETA_NUMBER, CONTENTS, CREATED_DATE)
		values(#{clientId},#{aetaNumber},#{contents},now())
	</insert>
	<delete id="AetaDeleteComment" parameterType="aetaComments">
		DELETE from
		COMMENTS
		where
		COMMENT_NUMBER =#{commentNumber}
	</delete>
	<update id="AetaUpdateView" parameterType="int">
		update AETA
		set
		views=views+1
		where AETA_NUMBER=#{aetaNumber}
	</update>


	<select id="FindClientId" parameterType="int">
		select CLIENT_ID
		from AETA
		where AETA_NUMBER=#{aetaNumber}
	</select>

</mapper>

